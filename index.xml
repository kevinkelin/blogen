<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KevinYang&#39;s blog</title>
    <link>https://enblog.yangyanxing.com/</link>
    <description>Recent content on KevinYang&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 13 Aug 2022 18:22:17 +0800</lastBuildDate><atom:link href="https://enblog.yangyanxing.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>function parameters of map and slice in golang</title>
      <link>https://enblog.yangyanxing.com/article/map-slice-in-func-params.html</link>
      <pubDate>Sat, 13 Aug 2022 18:22:17 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/map-slice-in-func-params.html</guid>
      <description>&lt;p&gt;In the function parameters of golang, if the parameter is a value type, if the parameter value is modified in the function, it will not affect the original variable, because a value copy will be performed in the function operation. If you want the modification of the function to affect the original variable, You need to pass pointers. The following code will not change the value of the original variable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;package&lt;/span&gt; main
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;teststr&lt;/span&gt;(s &lt;span style=&#34;color:#8be9fd&#34;&gt;string&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	s = &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;bbb&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	ss &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;aaaa&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#50fa7b&#34;&gt;teststr&lt;/span&gt;(ss)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Println&lt;/span&gt;(ss) &lt;span style=&#34;color:#6272a4&#34;&gt;// still aaaa, not bbb
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;After the teststr function, the variable ss has not been modified. If you want to affect the original variable, you need to pass in a pointer&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Creation and initialization of map in golang</title>
      <link>https://enblog.yangyanxing.com/article/create-map-in-golang.html</link>
      <pubDate>Thu, 11 Aug 2022 23:45:36 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/create-map-in-golang.html</guid>
      <description>&lt;p&gt;I wrote a lot of python scripts before. For dictionary type data in python, the creation is very simple and flexible, but sometimes I am not used to it in golang, which causes some troubles.
This article records some details of creating maps in golang.&lt;/p&gt;
&lt;p&gt;Variables in golang are divided into value types and references. Value types include integers, floating-point types, bool types, string arrays, and structure variable addresses. Values ​​are stored directly. For value-type variables, after declaration, if no assignment is made, then the variable The value of the value is the zero value of the type, such as the integer type is 0, the bool type is false, the reference types of golang include slice, map, channel, function, pointer, etc., if there is no assignment, it is nil, for nil variables, is it not? can be used directly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>An example to explain the application of go build tag tags in cross-compilation</title>
      <link>https://enblog.yangyanxing.com/article/cros-build-in-go.html</link>
      <pubDate>Sun, 07 Aug 2022 00:35:53 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/cros-build-in-go.html</guid>
      <description>&lt;p&gt;The thing is this, in a project, I need to read the creation time of a file in the system, and do different processing according to the time, such as deleting it after a certain time.
After querying, getting the file creation time can be done by using os and syscall in the standard library, but the interface of the syscall library in different systems is different, for example, it is used in this way under Mac&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How does go mod import local packages?</title>
      <link>https://enblog.yangyanxing.com/article/go-mod-import-localpkg.html</link>
      <pubDate>Wed, 03 Aug 2022 23:15:51 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/go-mod-import-localpkg.html</guid>
      <description>&lt;p&gt;When we use go development, we often use a lot of third-party packages, most of which are available for download in the form of open source, such as hosting on github, we only need to use &lt;code&gt;go get github.com/xxx/xxxx&lt;/code&gt; Download to, it&amp;rsquo;s very convenient.
But we often encounter packages that are not open source. For example, packages developed by other departments in the company are not open source, but are only used internally. If we want to use the package, we can no longer use go get. Explain in detail how to import local packages and the pits that may be encountered in the process.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The pit that Socket.io stepped on in gin</title>
      <link>https://enblog.yangyanxing.com/article/socketio-gin-experience.html</link>
      <pubDate>Sun, 24 Jul 2022 20:57:24 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/socketio-gin-experience.html</guid>
      <description>&lt;p&gt;Recently, golang is used to build the background system. The framework uses the very famous gin framework. Since socket.io needs to be used for long connection management in the project, the official recommended golang server is [go-socket.io](https:// github.com/googollee/go-socket.io), so according to the official document example, the background service is very simple.
However, there are various problems when using the client to connect. This article records the solutions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>In python, how to achieve the effect of abstract class?</title>
      <link>https://enblog.yangyanxing.com/article/interface-in-python.html</link>
      <pubDate>Thu, 14 Jul 2022 21:59:53 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/interface-in-python.html</guid>
      <description>&lt;p&gt;We all know that there is the concept of interface in java. A class can implement multiple interfaces, but it must implement all the methods in the interface, but there is no concept of interface in python. Classes can inherit through multiple inheritance Since there are multiple classes, now if we want to implement the effect of the interface in java, it is mandatory that the subclass must implement some methods, how to do it?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usage of __slots__ in python</title>
      <link>https://enblog.yangyanxing.com/article/slot-in-python.html</link>
      <pubDate>Mon, 11 Jul 2022 21:59:53 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/slot-in-python.html</guid>
      <description>&lt;p&gt;When looking at the sanic source code, I found that when defining a class, a &lt;code&gt;__slots__&lt;/code&gt; attribute will be set. Since I have not used a magic variable before, I checked it and record the function of this attribute here.
We know that in a python instance, we can dynamically bind attributes and methods to the instance, like the following&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usage of Mixin class in python</title>
      <link>https://enblog.yangyanxing.com/article/mixin-in-python.html</link>
      <pubDate>Sun, 10 Jul 2022 21:59:53 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/mixin-in-python.html</guid>
      <description>&lt;p&gt;Mixin is nothing new in python, it is just a manifestation of programming ideas, using its multi-inheritance language features to achieve a flexible programming method.&lt;/p&gt;
&lt;p&gt;Recently, I was looking at the source code of sanic and found that there are many Mixin classes, which probably look like this&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gin, sanic, flask read redis concurrency comparison</title>
      <link>https://enblog.yangyanxing.com/article/gin-and-sanic-get-redis.html</link>
      <pubDate>Thu, 30 Jun 2022 22:22:37 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/gin-and-sanic-get-redis.html</guid>
      <description>&lt;p&gt;Recently, I want to see how much difference there is in the performance of go and python. I don’t know, but the gap is still quite large. In order to facilitate the experiment, both background services access the same redis server. Simply use the get command to get a value, Then return it in json format&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The solution to the too many connections error reported in redis</title>
      <link>https://enblog.yangyanxing.com/article/redis-too-many-connections.html</link>
      <pubDate>Tue, 12 Apr 2022 19:32:30 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/redis-too-many-connections.html</guid>
      <description>&lt;p&gt;Recently, when I stress tested an interface in the system, I found that there was a large number of errors reported in the redis query interface, so I checked the background log and found that aioredis reported &lt;code&gt;Too many connections&lt;/code&gt;. At first, I thought it was because of the stress test. , because this interface needs to access redis data, and a large number of requests come in at the same time, it will cause a large number of requests to the redis server, and the redis server can&amp;rsquo;t resist returning the &lt;code&gt;Too many connections&lt;/code&gt; error, but this is not the case after investigation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Performance comparison between ORM and raw SQL</title>
      <link>https://enblog.yangyanxing.com/article/orm-sql-performance.html</link>
      <pubDate>Mon, 11 Apr 2022 16:28:11 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/orm-sql-performance.html</guid>
      <description>&lt;p&gt;Recently, I used the framework &lt;strong&gt;sanic&lt;/strong&gt;, which is known as the most powerful performance among python web frameworks, to build the basic environment and project framework of the project, but I have made a choice syndrome when using ORM. For a framework that pursues performance, After using ORM, it will definitely have some impact on performance, but how big is the impact? The existence of ORM also has its reasons, so can its advantages eliminate its performance loss?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cross-domain problem of using gin to build api backend system</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-cors.html</link>
      <pubDate>Fri, 14 Jan 2022 23:41:15 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-cors.html</guid>
      <description>&lt;p&gt;In the development mode of front-end and back-end separation, the cross-domain problem has always been a common problem. The general solution is divided into front-end and back-end. The front-end is mainly solved by jsonp, but the back-end solution will be more convenient. This article records the use of gin The framework solves cross-domain problems in the backend.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use gin to build redis of api background system</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-redis.html</link>
      <pubDate>Sun, 09 Jan 2022 00:12:51 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-redis.html</guid>
      <description>&lt;p&gt;Redis has a very important position in the web system and can act as a cache, message queue, step-by-step lock, etc. This article introduces the use of the go-redis library to simply operate redis.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Middleware development using gin to build api backend system</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-midware.html</link>
      <pubDate>Sat, 08 Jan 2022 00:11:03 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-midware.html</guid>
      <description>&lt;p&gt;In the previous articles, the default &lt;code&gt;gin.Default()&lt;/code&gt; was basically used to initialize an engine, and then the Run method of the engine was called to run a web service. Now if there is a demand, some APIs only manage Only administrators can access, and non-administrators are very 401. We can write a method and call this method on the interface that requires authorization to verify the authority, but in gin, we can also use a more elegant method, middleware.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MySQL preliminary CURD for building api backend system using gin</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-mysql-base.html</link>
      <pubDate>Fri, 07 Jan 2022 00:10:37 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-mysql-base.html</guid>
      <description>&lt;p&gt;The previous articles introduced the basic use of the gin framework. Modern web systems rarely deal with databases. The next few articles will briefly introduce how to use MySQL, Mongodb, and redis, which are commonly used in daily life. Use, this first introduces the use of MySQL.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use gin to build cookie and session of api background system</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-cookie-session.html</link>
      <pubDate>Tue, 04 Jan 2022 00:07:49 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-cookie-session.html</guid>
      <description>&lt;p&gt;The previous articles are all stateless requests. When dealing with stateful requests, such as user login scenarios, the web system usually uses cookies or sessions to record user status. This article records cookies and sessions under the gin framework. usage of.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use gin to build api background system to get request parameters</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-params.html</link>
      <pubDate>Thu, 16 Dec 2021 00:06:45 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-params.html</guid>
      <description>&lt;p&gt;The previous article recorded the construction of the gin framework and the basic use of routing. This article mainly records the problem of parameter transmission in the routing process, including GET and POST parameters, and the use of path parameters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use gin to build the framework of the API background system</title>
      <link>https://enblog.yangyanxing.com/article/use-go-gin-basic.html</link>
      <pubDate>Wed, 15 Dec 2021 00:06:04 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-go-gin-basic.html</guid>
      <description>&lt;p&gt;Gin is a popular framework in golang. Many systems are developed under this framework. This framework feels to me like Tornado&amp;rsquo;s position in python. It has basic functions, but if you want to use it well, I still need to develop a lot of my own functions and middleware. After reading a lot of tutorials, I want to record the learning process.&lt;/p&gt;
&lt;p&gt;This series simply implements some usable methods for background services, such as obtaining parameters, database query, etc. The overall project is not about the structure, at most it is a quick start, and the directory structure is not so particular, because beginners, So there will definitely be a lot of questions. Later, I will practice a little bit of repair.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang query MySQL data</title>
      <link>https://enblog.yangyanxing.com/article/query-mysql-in-go-base.html</link>
      <pubDate>Wed, 03 Nov 2021 22:23:38 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/query-mysql-in-go-base.html</guid>
      <description>&lt;p&gt;Recently, I have been looking at the use of the gin framework. Many documents and tutorials recommend using gorm to operate the database, but I have no idea about orm, so let’s learn how to use native sql to operate MySQL.&lt;/p&gt;
&lt;p&gt;On github, &lt;code&gt;https://github.com/go-sql-driver/mysql&lt;/code&gt; has the largest number of starts and is well maintained. I decided to use it to practice basic curd first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The choice of lock Mutex and channel channel in golang</title>
      <link>https://enblog.yangyanxing.com/article/choice-between-mutex-and-channel.html</link>
      <pubDate>Sat, 23 Oct 2021 21:47:12 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/choice-between-mutex-and-channel.html</guid>
      <description>&lt;p&gt;Both Mutex and channel can protect resources in a concurrent environment and avoid race conditions. Channel has always been sought after in golang, but since both can solve the problem, why do you need two things?&lt;/p&gt;
&lt;p&gt;Looking at some articles, I found that sometimes channels are too sought after. Sometimes you should use Mutex or Mutex, don&amp;rsquo;t use channel just to use channel, you need to distinguish between different scenarios&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Interface usage in golang</title>
      <link>https://enblog.yangyanxing.com/article/interface-in-golang.html</link>
      <pubDate>Sat, 23 Oct 2021 15:19:33 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/interface-in-golang.html</guid>
      <description>&lt;p&gt;The interface in golang is very different from the interface in other object-oriented.&lt;/p&gt;
&lt;p&gt;Definition of an interface&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//Define an interface, it has a run method
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;type&lt;/span&gt; Runable &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;interface&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#50fa7b&#34;&gt;run&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Define a &lt;code&gt;Runable&lt;/code&gt; interface, which has a method, run() , which has no parameters and no return value&lt;/p&gt;
&lt;p&gt;A structure can define a method. If a structure defines the &lt;code&gt;run()&lt;/code&gt; method, it means that the structure implements the &lt;code&gt;Runable&lt;/code&gt; interface, which is not like a class in java or python, which is displayed when it is defined. Indicates which interface is inherited from.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Receiver type problem of structure method in golang</title>
      <link>https://enblog.yangyanxing.com/article/golang-struct-methond-receiver.html</link>
      <pubDate>Sun, 17 Oct 2021 00:41:21 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/golang-struct-methond-receiver.html</guid>
      <description>&lt;p&gt;The structure in golang can be regarded as a class in object-oriented programming. You can define methods for the structure. Note the difference between methods and functions here. The definition of a function has no receiver, and the method has a receiver. Here The receiver can be in instance pointer form or instance form, for performance reasons &lt;code&gt;recv&lt;/code&gt; is most commonly a pointer to receiver_type, (because we don&amp;rsquo;t want a copy of the instance, as it would be if call-by-value) , especially when the receiver type is a struct.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>slice as function parameter in golang</title>
      <link>https://enblog.yangyanxing.com/article/slice-in-go.html</link>
      <pubDate>Fri, 15 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/slice-in-go.html</guid>
      <description>&lt;p&gt;The slice in golang is very similar to the list in python, but there are many differences. This article summarizes some features when the parameter of a function is a slice type.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use selenium to operate electron applications</title>
      <link>https://enblog.yangyanxing.com/article/use-selenium-opt-electron.html</link>
      <pubDate>Thu, 14 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-selenium-opt-electron.html</guid>
      <description>&lt;p&gt;In a recent automated test project, there is a requirement for testing internal IM communication software. After understanding the implementation of the corresponding technology stack of each client, the application in the mac uses the electron technology. We also conduct research on the corresponding technology. The article records the automated testing of electron applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Application of bitmap algorithm in test system</title>
      <link>https://enblog.yangyanxing.com/article/bitmap-in-test.html</link>
      <pubDate>Mon, 02 Aug 2021 16:38:51 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/bitmap-in-test.html</guid>
      <description>&lt;p&gt;In our test platform, there are many test mobile phones. For some mobile phones, we expect that it can only run specific tasks, or a mobile phone will have some specific states, such as charging, manual operation, mobile phone cleaning, when the mobile phone In different states, there will be some different processing actions. What solutions do we have at this time?&lt;/p&gt;
&lt;p&gt;The first thing that comes to mind should be to tag, create a new field in the database, such as tag, and modify the status of a mobile phone, just modify the tag field.&lt;/p&gt;
&lt;p&gt;But here is a question, if a phone has two or more tags, for example, the phone is charging, and it is manually operated, how much should this tag be set to? If this field can be set to &lt;code&gt;charging, oping&lt;/code&gt; in mysql, but it is a little troublesome when we search. For example, if I want to filter out the mobile phone that is charging, the sql statement is probably like this&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hexo migrate hugo</title>
      <link>https://enblog.yangyanxing.com/article/hexo-to-hugo.html</link>
      <pubDate>Mon, 31 May 2021 22:03:53 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/hexo-to-hugo.html</guid>
      <description>&lt;p&gt;Finally I can&amp;rsquo;t stand hexo anymore. I changed the computer. Basically, the original things can&amp;rsquo;t be migrated. The node version, the dependencies of various plug-ins, and different versions will be different. I encounter various compilation errors and the compilation is slow. . . .&lt;/p&gt;
&lt;p&gt;I couldn&amp;rsquo;t take it anymore, and finally decided to migrate my blog from hexo to hugo. I was a little hesitant at first, but after I turned it over, it was really fragrant!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use beego to build the project homepage</title>
      <link>https://enblog.yangyanxing.com/article/hello-page-with-beego.html</link>
      <pubDate>Sat, 29 May 2021 15:29:57 +0800</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/hello-page-with-beego.html</guid>
      <description>&lt;p&gt;I recently tried to use beego to initialize a project, and follow the documentation step by step.
Since the first attempt to use golang to build
Here I also record the problems and solutions I encountered during initialization.
Since I am also a novice, the problems encountered may be relatively low-level, but this is also used as some basis for the future use of the framework.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Tornado integrates socketio (1)</title>
      <link>https://enblog.yangyanxing.com/article/use-socketio-in-tornado.html</link>
      <pubDate>Tue, 18 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-socketio-in-tornado.html</guid>
      <description>&lt;p&gt;In the project I am working on recently, I need to send the video stream or audio stream from the mobile phone to the server, and then the server will forward it to the browser. At first, I used redis as a relay to send the data to redis, and then the redis server Publish and subscribe function, the overall structure is as follows&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://yyxbloguse.oss-cn-beijing.aliyuncs.com/img/image-20210519225715299.png&#34; alt=&#34;image-20210519225715299&#34;&gt;&lt;/p&gt;
&lt;p&gt;It mainly uses the pub/sub function of redis. There is no problem with this solution, but the overall performance bottleneck is affected by redis.&lt;/p&gt;
&lt;p&gt;I recently came into contact with socketio and found that this requirement can be achieved by using it, but I found some information on the Internet. In the use of python, it is mainly flask-socketio and native applications. Since the current project uses Tornado to build, I use it. Fusion of socketio and Tornado for a few days.&lt;/p&gt;
&lt;p&gt;This tutorial will be introduced in several parts, mainly the following chapters&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Introduction to socketio and the construction of scaffolding&lt;/li&gt;
&lt;li&gt;Define message processing events&lt;/li&gt;
&lt;li&gt;Use of namespaces&lt;/li&gt;
&lt;li&gt;Message release and response&lt;/li&gt;
&lt;li&gt;Use of room&lt;/li&gt;
&lt;li&gt;Use socketio in front-end vue to communicate with back-end&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>The use of aiomysql and sqlalchemy</title>
      <link>https://enblog.yangyanxing.com/article/python-aiomysql.html</link>
      <pubDate>Tue, 23 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/python-aiomysql.html</guid>
      <description>&lt;p&gt;I have been using tornado for projects before, and the database has been mostly using mongo and redis. With its excellent asynchronous features, it works very stably and efficiently. The recent project needs to use mysql, because moto and aioredis are used when using mongo and redis before. The database operation is performed asynchronously, so the database of asynchronous operation mysql is queried on the Internet. This article records the problems encountered in asynchronous operation and the corresponding solutions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Send logs asynchronously to a remote server in python</title>
      <link>https://enblog.yangyanxing.com/article/python-aiolog.html</link>
      <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/python-aiolog.html</guid>
      <description>&lt;p&gt;The most common way to use logs in python is to output logs in the console and files. The logging module also provides the corresponding classes very well, which is very convenient to use, but sometimes we may have some requirements, such as Send the log to the remote, or write directly to the database, how to achieve this requirement?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>functools.partial usage in python</title>
      <link>https://enblog.yangyanxing.com/article/useage-partial.html</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/useage-partial.html</guid>
      <description>&lt;p&gt;I often see some code using &lt;code&gt;functools.partial&lt;/code&gt; to wrap a function. I didn&amp;rsquo;t know much about its usage before, but I just wrote it according to other people&amp;rsquo;s code. I took a closer look at its usage today. The basic usage is still very simple. .&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use dns to access services in kubernetes</title>
      <link>https://enblog.yangyanxing.com/article/namespace-k8s.html</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/namespace-k8s.html</guid>
      <description>In the previous article Communication between pods in kubernetes , we use environment variables to resolve the IP of the service, but you can use environment variables such as A limitation, all pods must be in one namespace, that is to say, pods in the same namespace will share environment variables. How to access them if they are not in the same namespace? Let&amp;rsquo;s take a python flask application as an example.</description>
    </item>
    
    <item>
      <title>Communication between pods in kubernetes</title>
      <link>https://enblog.yangyanxing.com/article/pod-communite-k8s.html</link>
      <pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/pod-communite-k8s.html</guid>
      <description>&lt;p&gt;If we create some pods, how do they communicate with each other? Because the ip address of the pod may change, here we mainly discuss several scenarios&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How do different pods on the same network communicate?&lt;/li&gt;
&lt;li&gt;How do different containers in the same pod communicate?&lt;/li&gt;
&lt;li&gt;How do different pods communicate on different networks?&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>service types in kubernetes</title>
      <link>https://enblog.yangyanxing.com/article/type-in-k8s.html</link>
      <pubDate>Fri, 07 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/type-in-k8s.html</guid>
      <description>&lt;p&gt;When we use deployment or RS to create some pods, such as creating a nginx pod, there are three replicas in the pod. At this time, if we view the pod status, it will look like this&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Concurrency issues in pymongo</title>
      <link>https://enblog.yangyanxing.com/article/pymongo-threadsafe.html</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/pymongo-threadsafe.html</guid>
      <description>&lt;p&gt;When writing a system, we have to consider the accuracy of writing to the database at high concurrency. Take mongodb as an example, for example, to insert a piece of data, update if it exists, insert new data if it does not exist, and what will happen if there are multiple threads? The problem?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Custom loggingHandler in python</title>
      <link>https://enblog.yangyanxing.com/article/logging-handler-python.html</link>
      <pubDate>Thu, 12 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/logging-handler-python.html</guid>
      <description>&lt;p&gt;Recently, when using log processing in python, there is a new requirement to write the log into the database. It is lazy at first, write a loop, read the local log file regularly, and write the content directly to the database. Obviously, this kind of processing is very low. Later, I wrote a service outside, but in essence, the read content is sent to a post request in a circular reading method and then stored in the database. These two methods are essentially the same, and The second one also encountered the problem of too much content causing service parsing failure when sending post requests.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using virtual environment in python</title>
      <link>https://enblog.yangyanxing.com/article/use_venv_in_python.html</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use_venv_in_python.html</guid>
      <description>&lt;p&gt;In the process of python development, we have always advocated the use of virtual environments for project isolation, so that various problems will not be caused due to different python packages. It&amp;rsquo;s actually very bad, and recently I have begun to try to use virtual environments to develop projects in isolation.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A summary of the use of strings in the go language</title>
      <link>https://enblog.yangyanxing.com/article/string_use_in_go.html</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/string_use_in_go.html</guid>
      <description>&lt;h1 id=&#34;string&#34;&gt;string&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;Strings can only be defined with double quotes,&lt;/li&gt;
&lt;li&gt;If the single and double quotes in go are not passed, you can use the &lt;code&gt; &lt;/code&gt; ` sign to define the original output without escaping, which is equivalent to the triple quotes in python&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Summary of the use of file paths in the go language</title>
      <link>https://enblog.yangyanxing.com/article/file_path_in_go.html</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/file_path_in_go.html</guid>
      <description>&lt;p&gt;It is very common to manipulate files in programming, such as reading or writing files, but before that, the file path will be constructed. There is a corresponding os.path library in python, and the operation of file paths is very simple, such as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;os.path.basename to get the filename&lt;/li&gt;
&lt;li&gt;os.path.dirname to get the file directory name&lt;/li&gt;
&lt;li&gt;os.path.join concatenate file path&lt;/li&gt;
&lt;li&gt;os.path.splitext split file, get filename and extension&lt;/li&gt;
&lt;li&gt;os.path.adspath Get the absolute path of the file&lt;/li&gt;
&lt;li&gt;os.path.exists to determine whether a file or folder exists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following attempts to implement the above methods in the go language&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The problem of using indefinite parameters in functions in go language</title>
      <link>https://enblog.yangyanxing.com/article/func_viriadic_in_go.html</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/func_viriadic_in_go.html</guid>
      <description>&lt;p&gt;In the go language, functions can also use indefinite parameters, variadic functions, that is, the number of parameters is variable - 0 or more. A variadic function is declared by prefixing its parameter type with an ellipsis (three dots).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Several ways to execute commands in the go language</title>
      <link>https://enblog.yangyanxing.com/article/exec_command_in_go.html</link>
      <pubDate>Fri, 23 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/exec_command_in_go.html</guid>
      <description>&lt;p&gt;The commands used by the go language to execute all systems are still a bit complicated compared to python. Executing commands is a very common requirement, such as calling a system command, starting an exe, etc. There are several situations here, which will be summarized later.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;only execute the command, do not output the result&lt;/li&gt;
&lt;li&gt;Execute the command and get the output&lt;/li&gt;
&lt;li&gt;Blocking and asynchronous execution&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>new and make in go language</title>
      <link>https://enblog.yangyanxing.com/article/new_make_in_go.html</link>
      <pubDate>Tue, 13 Aug 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/new_make_in_go.html</guid>
      <description>&lt;p&gt;Beginning to learn go language, I am a little confused about whether to use new or make when initializing variables, here is a brief summary&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Application of for range in go language</title>
      <link>https://enblog.yangyanxing.com/article/forrange_in_go.html</link>
      <pubDate>Sun, 11 Aug 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/forrange_in_go.html</guid>
      <description>&lt;p&gt;for range is used in go language to traverse an iterable object, it can be applied to arrays, slices, dictionaries, etc.
It has the following usages&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using annotation functions in python</title>
      <link>https://enblog.yangyanxing.com/article/function_annotations_in_python.html</link>
      <pubDate>Sun, 04 Aug 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/function_annotations_in_python.html</guid>
      <description>&lt;p&gt;Recently, I was looking at the source code of aiohttp and found a way of defining a function that I have never seen before. &lt;code&gt;def __enter__(self) -&amp;gt; None&lt;/code&gt;, followed by a &lt;code&gt;-&amp;gt;&lt;/code&gt;, which made a person who has been hurt by C pointers come to Said that the whole person is not good, so I checked the usage of this arrow with an arrow. The pointer of &lt;code&gt;-&amp;gt;&lt;/code&gt; here has nothing to do with half a dime.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Data sharing problem in multithreading and multiprocessing in python</title>
      <link>https://enblog.yangyanxing.com/article/sharedata_in_python_thread.html</link>
      <pubDate>Sat, 27 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/sharedata_in_python_thread.html</guid>
      <description>&lt;p&gt;When writing multi-threading and multi-process before, because in general, each sub-thread or sub-process does not have much connection before, because generally, each sub-thread or each sub-process is not connected much. If communication is required, I will use queue or database to complete it. , but recently when I was writing some multi-threaded and multi-process code, I found that if they need to use shared variables, they need to pay attention&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use aiomysql to operate mysql asynchronously</title>
      <link>https://enblog.yangyanxing.com/article/aiomysql_in_python.html</link>
      <pubDate>Sat, 20 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/aiomysql_in_python.html</guid>
      <description>&lt;p&gt;I have been using mongo and redis before, and I have recently started using the mysql database in the project. Since the current project is an asynchronous operation in the whole process, I checked the asynchronous operation of mysql in python on the Internet, and finally found aiomysql. is to achieve the best, and now briefly introduce its use.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Solve the problem that the mysql server actively disconnects after no operation timeout</title>
      <link>https://enblog.yangyanxing.com/article/connect_short_problem.html</link>
      <pubDate>Thu, 18 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/connect_short_problem.html</guid>
      <description>&lt;p&gt;When we use the mysql service, under normal circumstances, the timeout set by mysql is 8 hours (28800 seconds), that is to say, if a connection does not operate for 8 hours, then mysql will actively disconnect the connection. When this connection tries to query again, it will report a &amp;ldquo;MySQL server has gone away&amp;rdquo; error, but sometimes, due to some settings made by the mysql server, in many cases, the connection timeout will be shortened to ensure more connections. available. Sometimes the settings are abnormal, very short, 30 seconds, so that the client side needs to do some operations to ensure that mysql does not take the initiative to disconnect.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Filter to filter log output in python</title>
      <link>https://enblog.yangyanxing.com/article/use_filter_in_python_logging.html</link>
      <pubDate>Tue, 16 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use_filter_in_python_logging.html</guid>
      <description>&lt;p&gt;The thing is like this, I wrote a tornado service. During the process, I used logging to record some content. Since I didn&amp;rsquo;t carefully observe tornado&amp;rsquo;s own log management at the beginning, I generally used debug to record ordinary logs, and there was a problem with error recording. , but when the service starts, it is found that the level of tornado&amp;rsquo;s access log is info, which is 20, and the level of debug is 10, so if I define the level of the log to be debug, it will definitely output to in the log file.
But I don&amp;rsquo;t care about access logs now, and since my service may have access all the time, it will have a great impact when I search for log information.
what can we do about it?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Double star parameter expansion problem in python</title>
      <link>https://enblog.yangyanxing.com/article/kwargs_in_python.html</link>
      <pubDate>Thu, 11 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/kwargs_in_python.html</guid>
      <description>&lt;p&gt;Indefinite parameters are allowed in python functions. We are accustomed to this kind of parameters, and this way of writing is very convenient, but we are not very familiar with the operating mechanism behind it. This kind of double star indefinite parameter problem is also recorded here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aggregate query by day in mongodb</title>
      <link>https://enblog.yangyanxing.com/article/aggregate-perday-mongodb.html</link>
      <pubDate>Tue, 09 Jul 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/aggregate-perday-mongodb.html</guid>
      <description>&lt;p&gt;Recently, I encountered a problem when writing a project. I used mongodb to record the execution results of the use cases, but the date format was used for the time records. Now there is a requirement to count the successful use cases and failures every day in days. When it comes to statistics, aggregate queries must be used, but if the time in date format is used as the group basis, it is equivalent to no grouping, because it is almost impossible to record the time of the use case at the same time. I checked the relevant documents today, You can use mongodb&amp;rsquo;s &lt;code&gt;$dateToString&lt;/code&gt; command to accomplish this requirement&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Processing flow analysis in python asynchronous coroutine (2)</title>
      <link>https://enblog.yangyanxing.com/article/sync_in_asyncio2.html</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/sync_in_asyncio2.html</guid>
      <description>&lt;p&gt;The previous article 
&lt;a href=&#34;https://mp.weixin.qq.com/s/iNhWG2VJr-PEANzmU8jqbQ&#34; title=&#34;Processing Process Analysis in Python Asynchronous Coroutines (1)&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    Processing Process Analysis in Python Asynchronous Coroutines (1)
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; introduced the use of asyncio to create a single coroutine and multiple coroutines in python3 A coroutine, this article describes how to call synchronous functions in asynchronous applications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Processing flow analysis in python asynchronous coroutine (1)</title>
      <link>https://enblog.yangyanxing.com/article/sync_in_asyncio.html</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/sync_in_asyncio.html</guid>
      <description>&lt;p&gt;A previous article 
&lt;a href=&#34;https://www.yangyanxing.com/article/asyncio_in_python.html&#34; title=&#34;Detailed use of asyncio in python&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    Detailed use of asyncio in python
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; introduced the basic use of asyncio in python3, which can be used in actual work, due to the previous I have written too many multi-threading and multi-process, so for the previous writing style and some library functions that do not have asynchronous support, because they have to be written in asynchronous, there are still many synchronous methods for writing code. Today Here is a summary of how to deal with synchronous functions in asynchronous operations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Detailed explanation of the use of asyncio in python</title>
      <link>https://enblog.yangyanxing.com/article/asyncio_in_python.html</link>
      <pubDate>Sat, 08 Jun 2019 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/asyncio_in_python.html</guid>
      <description>&lt;p&gt;In the asynchronous practice of python, every time you look at &lt;code&gt;asynicio&lt;/code&gt;, you will have new gains. This article summarizes the use of this library recently.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The easy-to-ignore problem in object orientation in python</title>
      <link>https://enblog.yangyanxing.com/article/oop_in_python.html</link>
      <pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/oop_in_python.html</guid>
      <description>&lt;p&gt;As an object-oriented language, if you cannot use its object-oriented features well in actual work, you will never be able to comprehend the essence of the language. In the following article, I will try my best to introduce it from the basics to the in-depth introduction. Object-oriented content, the content is long, and some basic ones can be selectively watched.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using step-by-step process computing in python</title>
      <link>https://enblog.yangyanxing.com/article/fractional_in_python.html</link>
      <pubDate>Thu, 21 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/fractional_in_python.html</guid>
      <description>&lt;p&gt;Using multi-process and multi-threading in python can achieve running multiple tasks at the same time, and in the selection of multi-process and multi-threading, the multi-process method should be preferred, because multi-process is more stable, and the operation management of processes is also better. It is convenient, but one thing is the unique killer of multi-process. Multi-process can divide the process to run on multiple machines. If there are many tasks, even if a machine has multi-process or multi-process running, it will still consume a lot of money. Time, then think about whether the task can be distributed to multiple machines to run, so that the task can be completed faster.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aggregate query in pymongo</title>
      <link>https://enblog.yangyanxing.com/article/aggregate_in_pymongo.html</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/aggregate_in_pymongo.html</guid>
      <description>&lt;p&gt;When using the mongo database, simple queries can basically meet most business scenarios, but just imagine, how to query if you want to count how many times a recommendation appears in the specified data? The stupid way is to use &lt;code&gt;find&lt;/code&gt; to query the data, and then use the &lt;code&gt;count()&lt;/code&gt; method for data statistics. This scenario is fine, but what if the sum of one of the fields is required? Is it necessary to traverse the corresponding data and then perform the sum operation?
In mysql we often use &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;group by&lt;/code&gt; and other queries, and in mongodb we can also use aggregation queries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Character encoding problem in python3</title>
      <link>https://enblog.yangyanxing.com/article/charset_in_python3.html</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/charset_in_python3.html</guid>
      <description>&lt;p&gt;If it is a pain to deal with character encoding in python2, and if you imagine that python3 is not so painful, then I just want to say that you think too much, and you have finally figured out the problem of character encoding in python2, but replace it with python3, it will rebuild the previous system, so that the previous knowledge system cannot be used well and can only be rebuilt. It feels like jumping from one pit to another pit. Let&amp;rsquo;s take a look at this troublesome python coding problem.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using priority queues in python</title>
      <link>https://enblog.yangyanxing.com/article/priorityqueue_in_python.html</link>
      <pubDate>Mon, 04 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/priorityqueue_in_python.html</guid>
      <description>&lt;p&gt;I believe that everyone is familiar with the concept of queues. This first-in-first-out data structure is widely used, and queues are used in general production and consumption. For the introduction of queue usage, please refer to my previous article [Queue and Queue in Python] Multiprocessing (multiprocessing)](
&lt;a href=&#34;https://www.yangyanxing.com/article/1103.html&#34; title=&#34;https://www.yangyanxing.com/article/1103.html&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    https://www.yangyanxing.com/article/1103.html
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt;) There is also a stack, which is a first-in, last-out data structure. The surface priority queue is different from ordinary queues and stacks. In terms of implementation, it generally passes the data structure of the heap, and the heap is actually a complete binary tree. It sorts the elements entering the container (according to the rules specified in advance), and the order of dequeuing will be the root of the binary tree. The element represented by the dot. Next, we introduce the implementation of several priority queues.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Encrypt password with salted hash function in python</title>
      <link>https://enblog.yangyanxing.com/article/python_generate_password_hash.html</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/python_generate_password_hash.html</guid>
      <description>&lt;p&gt;The development of a website is inseparable from the user&amp;rsquo;s registration and login. Today, we will talk about how to save user passwords during website development. The traditional methods are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Plaintext storage: It can be recognized by the naked eye without any security. Who uses who is stupid&lt;/li&gt;
&lt;li&gt;Encrypted storage: Through a certain transformation, the original password is not easy to be identified. There are several types of password encryption:&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Plaintext transcoding encryption: BASE64, 7BIT, etc. This method is just a trick, not real encryption.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Symmetric algorithm encryption: DES, RSA, etc.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Signature algorithm encryption: It can also be understood as one-way hash encryption, such as MD5, SHA1, etc. The encryption algorithm is fixed and easily cracked by brute force. If the passwords are the same, the resulting hash value is the same.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Salted hash encryption: A &amp;ldquo;random&amp;rdquo; string (salt value) is mixed in during encryption and then hashed and encrypted. Even if the password is the same, if the salt value is different, then the hash value is not the same. This encryption method is mainly used in website development now.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This article mainly introduces the fourth &amp;ldquo;salted hash encryption&amp;rdquo;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asynchronous practice and tornado application in python</title>
      <link>https://enblog.yangyanxing.com/article/async_in_python.html</link>
      <pubDate>Fri, 11 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/async_in_python.html</guid>
      <description>&lt;p&gt;In recent projects, tornado is used in python3, and it has been used before. It is in python2. Since the understanding of coroutines is not very thorough, I just apply the writing in the official documents. Recently, I have looked at the usage of coroutines in detail, and also Practice tornado asynchronously in python3.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>special query in pymongo</title>
      <link>https://enblog.yangyanxing.com/article/specialuse-in-pymongo.html</link>
      <pubDate>Thu, 27 Dec 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/specialuse-in-pymongo.html</guid>
      <description>&lt;p&gt;It is enough to see this article for the common additions, deletions and changes of python to operate mongo 
&lt;a href=&#34;https://juejin.im/post/5addbd0e518825671f2f62ee&#34; title=&#34;Python operation of MongoDB is enough to see this article&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    Python operation of MongoDB is enough to see this article
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recently, I am sorting out some queries that are relatively rarely used in pymongo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Don&#39;t underestimate tuples</title>
      <link>https://enblog.yangyanxing.com/article/tulple_detail.html</link>
      <pubDate>Wed, 28 Nov 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/tulple_detail.html</guid>
      <description>&lt;p&gt;Tuples and lists, everyone who writes python knows and knows that tuples are immutable, but is it necessary to create a new data type just because one is immutable?
The answer is definitely not, so let&amp;rsquo;s take a look at how tuples are used&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The use of map, lambda, higher-order functions and decorators in python</title>
      <link>https://enblog.yangyanxing.com/article/higher-order-function.html</link>
      <pubDate>Sun, 01 Jul 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/higher-order-function.html</guid>
      <description>&lt;p&gt;When friends with a little python foundation see some functions written by someone, they will intentionally write some higher-order functions, either with a map, or a lambda, and a higher @ decoration There is nothing difficult about the other things. The usage is more advanced. If you can follow its logic and use it in practical applications accurately, it will still bring a certain improvement in the efficiency of the program. As for readability, when When you are accustomed to these usages, you will feel that its readability is also very good. The reason why you are not used to it is mainly because you do not understand its usage. When it comes to readability, this is another topic, which will be discussed in detail later. Let&amp;rsquo;s talk about the use of higher-order functions and decorators today. I hope that friends who read this article have benefited from it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>List sorting problems in python and the use of sort and sorted</title>
      <link>https://enblog.yangyanxing.com/article/python-list-sort.html</link>
      <pubDate>Thu, 28 Jun 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/python-list-sort.html</guid>
      <description>&lt;p&gt;List sorting is a very common operation. There are many methods and pits. Here is a simple record.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The sorted method&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; l &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;sorted&lt;/span&gt;(l)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; l
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; l2 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;sorted&lt;/span&gt;(l)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; l2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;z&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(l2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;38967136&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(l)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;38985520&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The sorted method passes in a list and returns a new list, which does not affect the order of the original list. From the above results, the numbers are sorted before the strings. In fact, they are sorted according to the ASCII order of the characters. If What about strings in the list?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>log in python save separate files by day</title>
      <link>https://enblog.yangyanxing.com/article/python-logging-day-file.html</link>
      <pubDate>Sun, 24 Jun 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/python-logging-day-file.html</guid>
      <description>&lt;p&gt;When running a web python program, it is best to save the log by day, so that it is very convenient to view, and the log file is not too large to open.
The logging module that comes with python has a very powerful role&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configure multiple ssh key pairs and manage multiple ssh permanently</title>
      <link>https://enblog.yangyanxing.com/article/config-local-ssh.html</link>
      <pubDate>Sat, 16 Jun 2018 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/config-local-ssh.html</guid>
      <description>&lt;p&gt;I have been playing around with SSH in the past two days, and I have been ignorant of its use. Since I want to migrate my blog, I have to find out that I should deploy it to the domestic coding.
I did it before, but because I reinstalled the git-for-windows client, I got an error when I deployed it with the hexo d command at the beginning.
Taking advantage of this migration, I also took advantage of the local ssh management. Although there are still some problems, it is at least a little clearer than before. I also record the problems encountered during the process.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use python to operate selenium to operate a third-party browser (360 browser)</title>
      <link>https://enblog.yangyanxing.com/article/use-selenium-op-browser.html</link>
      <pubDate>Thu, 26 Apr 2018 22:41:32 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-selenium-op-browser.html</guid>
      <description>&lt;p&gt;Recently I was testing a project, using the 360 ​​browser to do some operations
I have used selenium to operate chrome and FireFox before, record it here&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>exception handling in python</title>
      <link>https://enblog.yangyanxing.com/article/try_in_python.html</link>
      <pubDate>Sat, 19 Aug 2017 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/try_in_python.html</guid>
      <description>&lt;p&gt;Writing programs must be exposed to exception handling. Fortunately, exception handling in python is relatively simple, but some details still need to be looked at.
Here is a record of the use of try in python.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Redis as a message queue to achieve production consumption and publish and subscribe</title>
      <link>https://enblog.yangyanxing.com/article/use-redis-for-mq-in-python.html</link>
      <pubDate>Sat, 19 Aug 2017 23:53:38 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-redis-for-mq-in-python.html</guid>
      <description>&lt;p&gt;In daily work, queues are often used. There are native queues in python, but since the native queues exist in memory, when the system restarts, there are no messages in the queues, and the step-by-step process cannot be performed. , List data in Redis has four primitives, LPUSH, LPOP, RPUSH, RPOP, which can be used together to achieve a simple production and consumption model.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The use of timed task apscheduler for python</title>
      <link>https://enblog.yangyanxing.com/article/use-apscheduler.html</link>
      <pubDate>Sat, 17 Jun 2017 21:42:13 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-apscheduler.html</guid>
      <description>&lt;p&gt;Recently, there is a special demand in the project, which requires the task to be suspended on the second Tuesday of each month, and then restarted on Wednesday.
So I checked on the Internet, there is an apscheduler library in python that can be implemented, and this framework is quite powerful
Record its use here&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use Uiautomator for UI-based testing</title>
      <link>https://enblog.yangyanxing.com/article/use-uiautomator-for-uitest.html</link>
      <pubDate>Thu, 12 May 2016 01:04:03 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/use-uiautomator-for-uitest.html</guid>
      <description>&lt;p&gt;I have been watching the test of the native &lt;code&gt;uiautomator&lt;/code&gt; in the past two days, and I have used it before, but I just implemented the official Android example simply, and there is no actual test meaning. [Implementation of the official Android example of uiautomator](http:/ /www.yangyanxing.com/article/1264.html), today combined with the automation project I am doing recently, I simply used uiautomator to implement it, just made a small example, but basically how to compile the jar and run it Well, here is also a simple record.
I have also used the python packaged by others to do it before, and that one is relatively simple to write. [Using uiautomator&amp;rsquo;s python package for android UI testing](
&lt;a href=&#34;http://www.yangyanxing.com/article/how-to-use-uiautomator&#34; title=&#34;http://www.yangyanxing.com/article/how-to-use-uiautomator&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    http://www.yangyanxing.com/article/how-to-use-uiautomator
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; -with-python.html)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Use uiautomator&#39;s python package for android UI testing</title>
      <link>https://enblog.yangyanxing.com/article/how-to-use-uiautomator-with-python.html</link>
      <pubDate>Fri, 28 Aug 2015 01:17:30 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/how-to-use-uiautomator-with-python.html</guid>
      <description>&lt;p&gt;In a recent project, there is a requirement to perform compatibility tests on applications on at least 100 mobile phones. The first thing that comes to mind is to automate the operation.&lt;/p&gt;
&lt;p&gt;The basic requirements are as follows, install the application under test, start and exit, and then install the test sample to detect whether there is a corresponding pop-up window interception&lt;/p&gt;
&lt;p&gt;Considering the various test frameworks on the market and the programming languages ​​that I am familiar with, I finally chose Google&amp;rsquo;s own uiautomator to do it. With the help of predecessors, it was encapsulated in python, so it was very smooth at the beginning, but the whole process was still There&amp;rsquo;s a lot to be aware of&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Queue and multiprocessing in python</title>
      <link>https://enblog.yangyanxing.com/article/1103.html</link>
      <pubDate>Wed, 30 Jul 2014 00:59:27 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/1103.html</guid>
      <description>&lt;p&gt;I recently came into contact with a project and wanted to run tasks in multiple virtual machines. With reference to the code of other people’s previous projects, multi-process was used to handle it, so I checked the multi-process in python on the Internet.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s talk about Queue (queue object)&lt;/p&gt;
&lt;p&gt;Queue is the standard library in python, which can be directly imported and referenced. When I was studying before, I heard the famous &amp;ldquo;eat first, pull first&amp;rdquo; and &amp;ldquo;eat first, then spit&amp;rdquo;. In fact, it is the queue mentioned here. It can be defined when the queue is constructed. Its capacity, don&amp;rsquo;t eat it, if you eat too much, it will report an error, if you don&amp;rsquo;t write or write a number less than 1 when constructing, it means infinite&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;white-space:pre;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Queue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Queue&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Queue(&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Put a value into the queue (put)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;put(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;yang&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;put(&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;q&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;put([&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;yan&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;xing&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Get the value &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; the queue get()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The default queue &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; first &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; first out
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Basic operations of python operation selenium</title>
      <link>https://enblog.yangyanxing.com/article/1085.html</link>
      <pubDate>Tue, 17 Jun 2014 22:59:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/1085.html</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 #coding:utf-8 from selenium import webdriver from selenium.</description>
    </item>
    
    <item>
      <title>Initial use of python&#39;s requests</title>
      <link>https://enblog.yangyanxing.com/article/1079.html</link>
      <pubDate>Sun, 15 Jun 2014 23:20:53 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/1079.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve heard that the requests library is powerful, but I haven&amp;rsquo;t touched it yet. I touched it today and found that using urllib, urllib2 and other methods before is really too rubbish&amp;hellip;&lt;/p&gt;
&lt;p&gt;Write some simple use preliminary as a record here&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chinese encoding problem in python</title>
      <link>https://enblog.yangyanxing.com/article/1050.html</link>
      <pubDate>Mon, 02 Jun 2014 00:25:02 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/1050.html</guid>
      <description>&lt;p&gt;In the field of programming, the problem of Chinese coding has always been a headache. Today, I will write a summary of the solution.&lt;/p&gt;
&lt;p&gt;The conversion between unicode and utf-8 and gbk, the functions involved are decode and encode&lt;/p&gt;
&lt;p&gt;First of all, it is clear that strings in python are stored in a certain encoding. In Chinese, in gbk and utf-8, although you can define a variable s = u&amp;rsquo;Yang Yanxing&amp;rsquo;, you can Use type(s) to see its type. At this time, this s is not a string, but a unicode type. When you define s = &amp;lsquo;Yang Yanxing&amp;rsquo;, then type(s) is the str type, but when When you define s = &amp;lsquo;Yang Yanxing&amp;rsquo; directly, there will be different problems in different scenarios. The cmd under windows is fine, but it is garbled in a utf-8 parser, so the best way is to define a Chinese (or non-English) strings are defined in unicode, and then decoded and output.&lt;/p&gt;
&lt;p&gt;decode string to unicode&lt;/p&gt;
&lt;p&gt;s = &amp;lsquo;Yang Yanxing&amp;rsquo;&lt;/p&gt;
&lt;p&gt;s_uni = s.decode(&amp;lsquo;gbk&amp;rsquo;) #Convert s to unicode, and add the original encoding type of this character when decoding&lt;/p&gt;
&lt;p&gt;s_utf8 = s_uni.encode(&amp;lsquo;utf-8&amp;rsquo;)&lt;/p&gt;
&lt;p&gt;s_gbk = s_uni.encode(&amp;lsquo;gbk&amp;rsquo;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>logging module application in python</title>
      <link>https://enblog.yangyanxing.com/article/963.html</link>
      <pubDate>Sat, 16 Nov 2013 23:56:49 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/963.html</guid>
      <description>&lt;p&gt;There is a logging module that comes with the system in python, which is very convenient to use, and this module is often used in the program, so that if there is a problem, you can easily find where the problem is through the log, which is more convenient than directly looking for the code.&lt;/p&gt;
&lt;p&gt;I have recorded some frequently used, not very commonly used ones, which can be viewed in the python documentation [http://docs.python.org/2/library/logging.html](
&lt;a href=&#34;http://docs.python.org/&#34; title=&#34;http://docs.python.org/&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    http://docs.python.org/
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; 2/library/logging.html)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Windows automation testing using python (1)</title>
      <link>https://enblog.yangyanxing.com/article/920.html</link>
      <pubDate>Sat, 05 Oct 2013 01:41:33 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/920.html</guid>
      <description>&lt;p&gt;Recently, I started to learn to organize the use of python in windows automation testing. I think it is very interesting.&lt;/p&gt;
&lt;p&gt;The main idea, under Windows, is to start the process, then find the handle of the process, and then operate the handle, including clicking, filling in text, closing, getting text, etc.&lt;/p&gt;
&lt;p&gt;The following is a simple operation of verifying the md5 value of a file to introduce a python application. Of course, there is a function for verifying md5 in python. You don&amp;rsquo;t have to use tools to verify it. Here is just an exercise to use python to automate operations.&lt;/p&gt;
&lt;p&gt;The tools used are SpyLite, which is used to view window ID, handle and other information&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python handles cookies in web pages</title>
      <link>https://enblog.yangyanxing.com/article/908.html</link>
      <pubDate>Tue, 10 Sep 2013 11:16:49 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/908.html</guid>
      <description>&lt;p&gt;Recently, I wanted to build a WeChat application for Xiaohuangji, but along the way, I found that many methods are no longer available. I tried it locally, and I also tried the method of getting the session through requests, but it didn&amp;rsquo;t work, but after this toss , but I have a better understanding of cookies. The following example uses python to log in to Renren.com to introduce the use of cookies.
The definition of cookie can refer to Baidu Encyclopedia, 
&lt;a href=&#34;http://baike.baidu.com/subview/835/5062332.htm&#34; title=&#34;http://baike.baidu.com/subview/835/5062332.htm&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    http://baike.baidu.com/subview/835/5062332.htm
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; But it says inside Messy, and a lot of repetition, use tools such as firefox or fiddler to grab cookies
Using the httpFox plug-in under firefox to check the login of Renren.com, the POST address is [http://www.renren.com/ajaxLogin](
&lt;a href=&#34;http://www.renren.com/ajaxLogin&#34; title=&#34;http://www.renren.com/ajaxLogin&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    http://www.renren.com/ajaxLogin
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; &amp;ldquo;
&lt;a href=&#34;http://www.renren.com/ajaxLogin%22&#34; title=&#34;http://www.renren.com/ajaxLogin&amp;#34;&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    http://www.renren.com/ajaxLogin&#34;
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt; 
&lt;a href=&#34;https://www.renren.com/ajaxLogin%22%29&amp;amp;#160;&#34; title=&#34;www.renren.com/ajaxLogin&amp;#34;)&amp;amp;#160;&#34; rel=&#34;noopener external nofollow noreferrer&#34; target=&#34;_blank&#34; class=&#34; exturl&#34;&gt;
    www.renren.com/ajaxLogin&#34;)&amp;#160;
    &lt;i class=&#34;fa fa-external-link-alt&#34;&gt;&lt;/i&gt;
&lt;/a&gt;

&lt;a href=&#34;https://enblog.yangyanxing.com/image/2013/09/getUrl.png&#34; title=&#34;&amp;lt;img src=&amp;#34;/image/2013/09/getUrl_thumb.png&amp;#34; alt=&amp;#34;getUrl&amp;#34; title=&amp;#34;getUrl&amp;#34;&amp;gt;&#34; &gt;
    &lt;img src=&#34;https://enblog.yangyanxing.com/image/2013/09/getUrl_thumb.png&#34; alt=&#34;getUrl&#34; title=&#34;getUrl&#34;&gt;
&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>python sending email is a very simple thing</title>
      <link>https://enblog.yangyanxing.com/article/870.html</link>
      <pubDate>Thu, 08 Aug 2013 00:09:33 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/article/870.html</guid>
      <description>Using python&amp;rsquo;s smtplib, sending emails will be a very simple matter. The following uses 163 mailboxes to send emails as an example to illustrate the application of smtplib
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 #coding:utf-8 import smtplib def sendMail(mail_to): mail_server = &amp;#39;smtp.163.com&amp;#39; mail_port = &amp;#39;25&amp;#39; username = &amp;#39;soar_1987@163.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://enblog.yangyanxing.com/about.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/about.html</guid>
      <description>天行健，君子以自强不息；地势坤，君子以厚德载物
GitHub: https://github.com/kevinkelin Weibo: https://weibo.com/kevinkelin Email: admin@yangyanxing.com 微信公众号 头条号 </description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://enblog.yangyanxing.com/archives.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://enblog.yangyanxing.com/archives.html</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
